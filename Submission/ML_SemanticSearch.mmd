sequenceDiagram
    participant User
    participant MacApp as Mac Vault App
    participant NLP as spaCy NLP<br/>(Preprocessing)
    participant OpenAI as OpenAI API<br/>(Query Embedding)
    participant PG as PostgreSQL + pgvector<br/>(HNSW Index)
    participant CRDT as CRDT Sync
    participant iPhone
    
    Note over User,iPhone: Semantic Search Flow: "vacation plans"
    
    User->>MacApp: Enter search query:<br/>"vacation plans"
    
    Note over MacApp,OpenAI: Step 1: Query Preprocessing & Embedding
    
    MacApp->>NLP: Preprocess query text
    NLP->>NLP: Tokenization: ["vacation", "plans"]
    NLP->>NLP: Lemmatization: ["vacation", "plan"]
    NLP->>NLP: Clean text: "vacation plan"
    NLP-->>MacApp: Preprocessed query
    
    MacApp->>OpenAI: Generate query embedding<br/>POST /v1/embeddings<br/>model: text-embedding-3-small<br/>input: "vacation plan"
    OpenAI-->>MacApp: Query vector:<br/>[0.567, 0.234, ..., 0.891]<br/>(1536 dimensions)
    
    Note over MacApp,PG: Step 2: Vector Similarity Search (pgvector)
    
    MacApp->>PG: Execute similarity query
    
    Note over PG: SQL Query with Vector Operator:<br/>SELECT m.id, m.content, m.timestamp, m.platform,<br/>  1 - (e.embedding <=> $query_vector) AS similarity<br/>FROM messages m<br/>JOIN message_embeddings e ON m.id = e.message_id<br/>WHERE m.user_id = $user_id<br/>ORDER BY e.embedding <=> $query_vector<br/>LIMIT 10;
    
    PG->>PG: HNSW index navigation:<br/>• Start at top layer<br/>• Traverse graph to nearest neighbors<br/>• Descend layers progressively<br/>• Find 10 closest vectors
    
    PG->>PG: Calculate cosine similarity:<br/>similarity = (query · embedding) / (|query| × |embedding|)
    
    PG->>PG: Results with similarity scores:<br/>1. "Hawaii trip for December" (0.92)<br/>2. "Requesting Dec 15-22 off" (0.88)<br/>3. "Beach vacation or mountain?" (0.85)<br/>4. "Urlaubspläne für nächsten" (0.82) [German!]<br/>5. "Holiday schedule discussion" (0.78)
    
    PG-->>MacApp: Return ranked results<br/>(Query time: 120ms)
    
    Note over MacApp,iPhone: Step 3: Result Enrichment & Display
    
    MacApp->>MacApp: Enrich results with metadata:<br/>• Platform icons (WhatsApp/iMessage/Email)<br/>• Participant names (resolve contact IDs)<br/>• Thread context (previous messages)<br/>• Highlighted keywords
    
    MacApp->>MacApp: Apply user filters (optional):<br/>• Date range filter<br/>• Platform filter<br/>• Participant filter<br/>• Sort by: relevance/date/platform
    
    MacApp-->>User: Display search results:<br/>━━━━━━━━━━━━━━━━━━━━━━━━━━<br/>🔍 "vacation plans" (10 results, 127ms)<br/><br/>1. ⭐⭐⭐ WhatsApp (Sep 28) - 92%<br/>   "Hawaii trip for December!<br/>    Thinking 7 days."<br/>   From: Sarah | 3 participants<br/><br/>2. ⭐⭐⭐ Email (Sep 25) - 88%<br/>   "RE: Holiday Schedule -<br/>    Requesting Dec 15-22 off"<br/>   From: you → HR<br/><br/>3. ⭐⭐ iMessage (Sep 22) - 85%<br/>   "Beach vacation or mountain<br/>    cabin? Can't decide 🤔"<br/>   From: John
    
    User->>MacApp: Click result #1
    MacApp->>MacApp: Load full conversation thread
    MacApp->>MacApp: Show message context:<br/>• Previous 5 messages<br/>• Next 5 messages<br/>• All participants<br/>• Attachments/media
    MacApp-->>User: Display full thread
    
    Note over MacApp,iPhone: Step 4: Cross-Device Sync (Optional)
    
    alt User saves search
        MacApp->>CRDT: Create saved search:<br/>{query: "vacation plans",<br/> timestamp, results_snapshot}
        CRDT->>iPhone: Sync saved search
        iPhone-->>User: Notification:<br/>"Saved search available"
    end
    
    Note over User,iPhone: Multi-Language Search Capability
    
    User->>MacApp: Search in English: "meeting tomorrow"
    MacApp->>OpenAI: Generate embedding
    MacApp->>PG: Vector search
    PG-->>MacApp: Results include:<br/>• "meeting tomorrow" (English) - 1.00<br/>• "reunión mañana" (Spanish) - 0.85<br/>• "Treffen morgen" (German) - 0.83<br/>• "明日の会議" (Japanese) - 0.71
    MacApp-->>User: Cross-lingual results<br/>with language flags 🇬🇧 🇪🇸 🇩🇪 🇯🇵
    
    Note over User,iPhone: Performance Characteristics:<br/>• Query embedding generation: 200ms<br/>• Vector search (HNSW): 120ms p95<br/>• Result enrichment: <50ms<br/>• Total latency: <400ms (sub-second)<br/>• Accuracy: 85%+ precision@10<br/>• Multilingual: 100+ languages supported

    %% Styling for dark background with high contrast
    %%{init: {'theme':'dark', 'themeVariables': { 
        'actorBkg':'#2563eb',
        'actorBorder':'#60a5fa',
        'actorTextColor':'#ffffff',
        'actorLineColor':'#60a5fa',
        'signalColor':'#e0e7ff',
        'signalTextColor':'#e0e7ff',
        'labelBoxBkgColor':'#1e293b',
        'labelBoxBorderColor':'#475569',
        'labelTextColor':'#f1f5f9',
        'loopTextColor':'#fbbf24',
        'altTextColor':'#fb923c',
        'noteBkgColor':'#065f46',
        'noteBorderColor':'#10b981',
        'noteTextColor':'#ffffff',
        'activationBkgColor':'#7c3aed',
        'activationBorderColor':'#a78bfa',
        'sequenceNumberColor':'#ffffff'
    }}}%%

